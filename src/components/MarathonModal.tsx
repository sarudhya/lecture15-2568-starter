import {
  Modal,
  Stack,
  TextInput,
  Radio,
  Select,
  Checkbox,
  Alert,
  Button,
  Text,
  Divider,
  Group,
} from "@mantine/core";
import { useMarathonFormStore } from "../store/MarathonFormStore";
import { useEffect,useState } from "react";
import { type MarathonModalProps } from "../libs/Marathon";
import { useForm } from '@mantine/form';
import { zod4Resolver } from 'mantine-form-zod-resolver';
import { marathonSchema } from "../zod/MarathonSchema";
export default function MarathonModal({ opened, onClose }: MarathonModalProps) {
  const [agree, setAgree] = useState(false); //check term of condition
  const {
    fname,
    lname,
    plan,
    gender,
    buyBottle,
    buyShoes,
    buyCap,
    total,
    email,
    setFname,
    setLname,
    setPlan,
    setGender,
    setBuyBottle,
    setBuyShoes,
    setBuyCap,
    setEmail,
    computeTotalPayment,
    reset,
  } = useMarathonFormStore();

  const marathonForm = useForm({
    initialValues: {
      fname,
      lname,
      plan,
      gender,
      buyBottle,
      buyShoes,
      buyCap,
      // total, //‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà form ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
      email,//‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå state ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô useMarathonFormStore ‡πÅ‡∏ó‡∏ô

      // email: '',//‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå state ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ
      // termsOfService: false, // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà real time
    },

    validate: zod4Resolver(marathonSchema),
    validateInputOnChange: true, // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏î‡∏πerror real time ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
    // {
    //   email: (value) => (/^\S+@\S+$/.test(value) ? null : 'Invalid email'),
    // },
  });

  const onSubmitRegister = () => {
    alert("register success"); //warning ‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
    onClose();
    reset();
  };

  useEffect(() => {
    computeTotalPayment(); //‡∏ñ‡πà‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô computeTotalPayment
  }),[marathonForm.values]; //‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  return (
    <Modal
      opened={opened}
      onClose={onClose}
      title="Register CMU Marathon üèÉ‚Äç‚ôÇÔ∏è"
      centered
      size="xl"
    >
      <form onSubmit={marathonForm.onSubmit(onSubmitRegister)}>
      <Stack>
        <Group justify="space-between" gap="xs" grow>
          <TextInput
            label="First name"
            withAsterisk
            value={fname}
            onChange={(e) => {
              setFname(e.currentTarget.value);
              marathonForm.setFieldValue("fname", e.currentTarget.value); // value ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ validate
            }}//‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô object ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
            // onChange={(e) => setFname(e.currentTarget.value)} 
            error={marathonForm.errors.fname}
            // error={!fname.trim() && "First name is required"}
          />
          <TextInput
            label="Last name"
            withAsterisk
            value={lname}
            onChange={(e) => {
              setLname(e.currentTarget.value);
              marathonForm.setFieldValue("lname", e.currentTarget.value); // value ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ validate
            }}
            error={marathonForm.errors.lname}
          />
        </Group>
        <TextInput
          label="Email"
          withAsterisk
          description="ex.excemble@email.com"
          // key={marathonForm.key("email")}
          // {...marathonForm.getInputProps("email")}
           onChange={(e) => {
              setEmail(e.currentTarget.value);
              marathonForm.setFieldValue("email", e.currentTarget.value); // value ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ validate
            }}
          // value={email}
          // onChange={(e)=>setEmail(e.currentTarget.value)}
          error={marathonForm.errors.email}
        />
        <Select
          label="Plan"
          placeholder="Please select.."
          data={[
            { value: "funrun", label: "Fun run 5.5 Km (500 THB)" },
            { value: "mini", label: "Mini Marathon 10 Km (800 THB)" },
            { value: "half", label: "Half Marathon 21 Km (1,200 THB)" },
            { value: "full", label: "Full Marathon 42.195 Km (1,500 THB)" },
          ]}
          value={plan}
          onChange={(value) => {
            if (value) setPlan(value as "funrun" | "mini" | "half" | "full");
            marathonForm.setFieldValue("plan", 
              value as "funrun" | "mini" | "half" | "full"
            ); //‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô string
          }}
          error={marathonForm.errors.plan}
          // error={!plan ? "Plan is required" : false}
        />

        <Radio.Group
          label="Gender"
          value={gender}
          onChange={(value) => {
            if (value) setGender(value as "male" | "female");
            marathonForm.setFieldValue("gender", 
              value as "male" | "female"
            );
          }}
          // error={!plan ? "Gender is required" : false}
          error={marathonForm.errors.gender}
        >
          <Radio m={4} value="male" label="Male üë®" />
          <Radio m={4} value="female" label="Female üë©" />
        </Radio.Group>
        <Checkbox
          label="Bottle üçº (200 THB)"
          checked={buyBottle} //‡∏Ñ‡πà‡∏≤ buyBottle ‡∏°‡∏≤‡∏à‡∏≤‡∏Å Zustand
          onChange={(e) => {
            setBuyBottle(e.currentTarget.checked);
            marathonForm.setFieldValue("buyBottle", e.currentTarget.checked); //‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô type checkbox ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡πÅ‡∏ö‡∏ö true false
          }}
          error={marathonForm.errors.buyBottle}
        />
        <Checkbox
          label="Shoes üëü (600 THB)"
          checked={buyShoes} //‡∏Ñ‡πà‡∏≤ buyShoes ‡∏°‡∏≤‡∏à‡∏≤‡∏Å Zustand
          onChange={(e) => {
            setBuyShoes(e.currentTarget.checked);
            marathonForm.setFieldValue("buyShoes", e.currentTarget.checked);
          }}
          error={marathonForm.errors.buyShoes}
        />
        <Checkbox
          label="Cap üß¢ (400 THB)"
          checked={buyCap} //‡∏Ñ‡πà‡∏≤ buyCap ‡∏°‡∏≤‡∏à‡∏≤‡∏Å Zustand
          onChange={(e) => {
            setBuyCap(e.currentTarget.checked);
            marathonForm.setFieldValue("buyCap", e.currentTarget.checked);
          }}
          error={marathonForm.errors.buyCap}
        />
        <Alert color="blue" title="Promotion üì¢">
          Buy all items to get 20% Discount
        </Alert>

        <Text>Total Payment : {total} THB</Text>
        <Divider my="xs" variant="dashed" />
        <Checkbox
          label={
            <>
              I accept
              <Text mx={2} span c="red" inherit>
                terms and conditions
              </Text>
            </>
          }
          checked={agree}
          onChange={(e) => {
            setAgree(e.currentTarget.checked);
            marathonForm.setFieldValue("agree",e.currentTarget.value) //check box agree
          }}
          error = {marathonForm.errors.agree}
        />
        <Button type="submit" /* ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà type ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô*/ disabled={!agree}> 
          Register
        </Button>
      </Stack>
      </form>
    </Modal>
  );
}
